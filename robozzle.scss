@function svg($svg) {
    @return url('data:image/svg+xml;charset=utf-8;base64,' + base64Encode($svg));
}

#templates {
    display: none;
}
body {
    background-color: #484848;
    font-family: Verdana, sans-serif;
    font-size: 12px;
}
.page-border {
    width: 930px;
    margin: 0 auto;
    background-color: #b8b8b8;
}
.page-head {
    padding: 23px 23px 10px;
    &__title {
        padding: 0;
        margin: 0;
        color: #404040;
        font-size: 24px;
        font-weight: bold;
    }
    &__subtitle {
        padding-left: 2px;
        margin: 0;
        color: #707070;
        font-size: 14px;
        font-weight: normal;
    }
}
.page-menu {
    list-style: none;
    margin: 0;
    padding: 0;
    height: 26px;
    background-color: #909090;
    &__item {
        height: 26px;
        line-height: 26px;
        border-color: #888888;
        border-style: solid;
        border-width: 0 1px;
        text-align: center;
        cursor: pointer;

        float: left;
        &.-right {
            float: right; }

        color: #505050;
        > a {
            color: #505050;
            text-decoration: none;
        }

        &:hover {
            background-color: #a0a0a0;
        }
        &.-active, &.-active:hover {
            background-color: #707070;
            color: white;
        }

    }
}
.page-content {
    position: relative;
    padding: 10px;
    background-color: #303030;
    &__tab {
        display: none;
    }
}
.content-levels {
    position: relative;
    &__levels-panel {
        width: 520px;
        margin: 0 auto;
    }
    &__scoreboard-panel {
        display: none;
        position: absolute;
        top: 40px;
        right: 0px;
        width: 180px;
    }
}
.content-game {
    display: table;
    &__board-panel {
        display: table-cell;
    }
    &__board-status {
        margin-bottom: 5px;
    }
    &__program-panel {
        display: table-cell;
        vertical-align: bottom;
        padding-left: 5px;
    }
    &__program-toolbar-panel {
        display: table-cell;
        vertical-align: bottom;
        padding-left: 5px;
    }
    &__design-toolbar-panel {
        display: table-cell;
        vertical-align: bottom;
        padding-left: 5px;
    }
    &__design-panel {
        display: table-cell;
        vertical-align: bottom;
        padding-left: 5px;
    }
}
.level-sort {
    list-style: none;
    margin: 0;
    padding: 0;
    &__item {
        display: inline-block;
        margin: 3px 0px 3px 3px;
        padding: 2px 5px;
        border-radius: 3px;
        color: white;
        cursor: pointer;

        background-color: #606060;
        &:hover {
            background-color: #404040; }
        &.-active, &.-active:hover {
            background-color: #909090; }
    }
}
.level-list {
    position: relative;
    padding: 10px 0 40px 0;
    min-height: 480px;
    border-radius: 0px 0px 4px 4px;
    background-color: #808080;
    &__level-page {
        list-style: none;
        margin: 0;
        padding: 0;
    }
    &__level-item {
        width: 500px;
        height: 52px;
        margin: 5px auto;
    }
    &__refresh {
        position: absolute;
        left: 10px;
        bottom: 10px;
    }
    &__page-control {
        position: absolute;
        left: 50%;
        bottom: 10px;
        white-space: nowrap;
        > div {
            width: 100%;
            margin-left: -50%;
        }
        &__current {
            width: 2em;
            text-align: right;
        }
        &__max {
            padding-right: 5px;
        }
    }
    &__hide-solved {
        position: absolute;
        right: 10px;
        bottom: 10px;
    }
}
.level-item {
    position: relative;
    border-radius: 4px;
    border-color: black;
    border-style: solid;
    border-width: 1px;
    cursor: pointer;

    background-color: #b0b080;
    &:hover {
        background-color: #c0c090; }
    &.-solved {
        background-color: #707070; }
    &.-solved:hover {
        background-color: #808080; }

    &__level-title {
        position: absolute;
        top: 5px;
        left: 8px;
        font-size: 14px;
        font-weight: bold;
    }
    &__level-difficulty {
        position: absolute;
        top: 5px;
        right: 8px;
    }
    &__level-difficulty-val {
        float: left;
        width: 16px;
        height: 16px;
    }
    &__level-details {
        position: absolute;
        bottom: 5px;
        left: 8px;
    }
    &__level-votes {
        position: absolute;
        bottom: 5px;
        right: 8px;
        font-weight: bold;
    }
    &__level-votes-liked {
        color: darkgreen;
    }
    &__level-votes-disliked {
        color: darkred;
    }
    a:link, a:visited {
        color: black;
    }
}
.scoreboard-panel {
    border-radius: 4px;
    padding-bottom: 10px;
    text-align: center;
    background-color: #808080;
    color: white;
    a:link, a:visited {
        color: #d0d0b0;
    }
    > h1 {
        font-size: 12px;
        font-weight: bold;
    }
    &__score-list {
        margin-left: 20px;
        margin-bottom: 10px;
    }
}
.score-item {
    text-align: left;
    &__value {
        width: 40px;
    }
    &__name {
        width: 40px;
    }
}
.table-container {
    display: table;
}
.table-row {
    display: table-row;
}
.table-column {
    display: table-cell;
    vertical-align: top;
}
.board-status {
    width: 620px;
    padding: 3px 10px 10px;
    border-radius: 4px;
    background-color: #707070;
    color: white;
    a:link, a:visited {
        color: #d0d0b0;
    }
    &__heading {
        padding-bottom: 10px;
    }
    &__title {
        font-size: 14px;
        font-weight: bold;
    }
    &__comments {
        margin-left: 10px;
    }
    &__stats {
        margin-left: 5px;
    }
}
#tutorial-modal {
    display: none;
    z-index: 100;
    position: absolute;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
    background-color: rgba(80,80,80,0.2);
}
.tutorial-dialog {
    z-index: 101;
    position: relative;
    width: 400px;
    height: 80px;
    padding: 10px;
    border-radius: 4px;
    background-color: #707070;
    &__message {
        color: white;
    }
    &__button-list {
        position: absolute;
        bottom: 10px;
        right: 10px;
    }
}
.-tutorial-highlight::before {
    content: " ";
    position: absolute;
    top: 0px;
    left: 0px;
    right: 0px;
    bottom: 0px;
    border: 5px solid yellow;
}

@mixin tile-color($color1, $color2) {
    background: svg(
        '<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40">\
            <defs>\
                <linearGradient id="conditionfill" x1="0" y1="0" x2="1" y2="1">\
                    <stop offset="0" stop-color="' + $color1 + '"/>\
                    <stop offset="1" stop-color="' + $color2 + '"/>\
                </linearGradient>\
            </defs>\
            <rect width="100%" height="100%" fill="url(#conditionfill)" stroke="none"/>\
            <line x1="0" x2="40" y1="1" y2="1" stroke-width="1" stroke-opacity="0.1" stroke="white"/>\
            <line x1="1" x2="1" y1="0" y2="40" stroke-width="1" stroke-opacity="0.1" stroke="white"/>\
            <line x1="0" x2="40" y1="39" y2="39" stroke-width="1" stroke-opacity="0.2" stroke="black"/>\
            <line x1="39" x2="39" y1="0" y2="40" stroke-width="1" stroke-opacity="0.2" stroke="black"/>\
        </svg>');
}

@mixin tile-icon {
    background: svg(
        '<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40">\
            <defs>\
                <linearGradient id="iconfill" x1="0" y1="0" x2="1" y2="1">\
                    <stop offset="0" stop-color="#b0b0b0"/>\
                    <stop offset="1" stop-color="#707070"/>\
                </linearGradient>\
            </defs>\
            <rect width="100%" height="100%" fill="url(#iconfill)" stroke="none"/>\
        </svg>');
}

@mixin item-star {
    background: svg(
        '<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 80 80">\
            <path fill="#ffff33" stroke="black" stroke-opacity="0.4" d="M40,20 35,34 21,34 32,42 28,56 40,48 52,56 48,42 59,34 45,34 z"/>\
        </svg>');
}

@mixin item-erase {
    background: svg(
        '<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40">\
            <line x1="13" x2="27" y1="13" y2="27" stroke-width="4" stroke-opacity="0.6" stroke="#f04040"/>\
            <line x1="13" x2="27" y1="27" y2="13" stroke-width="4" stroke-opacity="0.6" stroke="#f04040"/>\
        </svg>');
}

@mixin robot {
    background: svg(
        '<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40">\
            <defs>\
                <linearGradient id="robotfill" x1="0" x2="0" y1="0" y2="1">\
                    <stop offset="0.4" stop-color="#808080"/>\
                    <stop offset="0.5" stop-color="#FFFFFF"/>\
                    <stop offset="0.6" stop-color="#808080"/>\
                </linearGradient>\
            </defs>\
            <path fill="url(#robotfill)" stroke="black" stroke-opacity="0.4" d="M8,10 L33,20 8,30 15,20 z"/>\
        </svg>');
}

.tile {
    position: relative;
    width: 40px;
    height: 40px;
    &.-color-error {
        background-color: red;
        opacity: 0.5;
    }
    &.-color-R {
        @include tile-color(#e55858, #c53838);
    }
    &.-color-G {
        @include tile-color(#53b953, #339933);
    }
    &.-color-B {
        @include tile-color(#5353ec, #3333cc);
    }
    &.-color-icon {
        @include tile-icon;
    }
    &__item {
        position: absolute;
        top: 0px;
        left: 0px;
        width: 40px;
        height: 40px;
        &.-item-star, &.-item-starfade {
            @include item-star;
        }
        &.-item-erase {
            @include item-erase;
        }
    }
    &__robot {
        position: absolute;
        top: 0px;
        left: 0px;
        width: 100%;
        height: 100%;
        transform-origin: 50% 50%;
        @include robot;
        &.-robot-none {
            background: none;
        }
        &.-robot-0 {
            transform: rotate(0deg);
        }
        &.-robot-1 {
            transform: rotate(90deg);
        }
        &.-robot-2 {
            transform: rotate(180deg);
        }
        &.-robot-3 {
            transform: rotate(270deg);
        }
    }
}
.board {
    position: relative;
    &__grid {
        border-collapse: collapse;
    }
    &__tile {
        padding: 0px;
    }
    &__robot {
        position: absolute;
    }
}
.design-toolbar {
    background-color: #707070;
    padding: 5px;
    border-radius: 4px;
    &__tile {
        margin: 5px;
        border: 1px solid black;
    }
}

@mixin command-f {
    background: svg(
        '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 30 30">\
            <path fill="#eeeeee" stroke="none" d="M14,25 16,25 16,9 19.5,15 21.5,15 16,5 14,5 8.5,15 10.5,15 14,9 z"/>\
        </svg>');
}
@mixin command-turn {
    background: svg(
        '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 30 30">\
        <path fill="#eeeeee" stroke="none" d="M5,25 C5,14 11,11 22,11 L15,7 15,5 25,11 25,13 15,18 15,16 22,13 C12,13 7,15 7,25 z"/>\
        </svg>');
}
@mixin command-sub($i) {
    background: svg(
        '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 30 30">\
            <text text-anchor="middle" x="15" y="22" font-size="18" font-family="Verdana, sans-serif" fill="#eeeeee" stroke="none">F' + $i + '</text>\
        </svg>');
}
@mixin command-paint($color) {
    background: svg(
        '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 30 30">\
            <circle cx="15" cy="15" r="8.5" stroke="black" fill="' + $color + '"/>\
        </svg>');
}
@mixin command-condition($color1, $color2) {
    background: svg(
        '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 30 30">\
            <defs>\
                <linearGradient id="conditionfill" x1="0" y1="0" x2="0" y2="1">\
                    <stop offset="0" stop-color="' + $color1 + '"/>\
                    <stop offset="1" stop-color="' + $color2 + '"/>\
                </linearGradient>\
            </defs>\
            <rect x="4.5" y="4.5" width="21" height="21" fill="url(#conditionfill)" stroke="black"/>\
        </svg>');
}
@mixin condition($color1, $color2) {
    background: svg(
        '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 30 30">\
            <defs>\
                <linearGradient id="conditionfill" x1="0" y1="0" x2="0" y2="1">\
                    <stop offset="0" stop-color="' + $color1 + '"/>\
                    <stop offset="1" stop-color="' + $color2 + '"/>\
                </linearGradient>\
            </defs>\
            <rect x="0.5" y="0.5" width="29" height="29" fill="url(#conditionfill)" stroke="#404040"/>\
        </svg>');
}

.command {
    &.-command-f {
        @include command-f;
    }
    &.-command-r, &.-command-l {
        @include command-turn;
    }
    &.-command-l {
        transform: scale(-1,1);
    }
    @for $i from 1 through 5 {
        &.-command-#{$i} {
            @include command-sub($i);
        }
    }
    &.-command-R {
        @include command-paint(#c53838);
    }
    &.-command-G {
        @include command-paint(#339933);
    }
    &.-command-B {
        @include command-paint(#3333cc);
    }
}

.program-list {
    display: table;
    border-spacing: 10px;
    cursor: default;

    &__item {
        display: table-row;
    }
    &__label {
        display: table-cell;
        vertical-align: middle;
        font-size: 14px;
    }
    &__grid {
        display: table-cell;
        vertical-align: top;
        position: relative;
        white-space: nowrap;
        &.-tutorial-highlight {
            &::before {
                margin: -5px;
            }
            &.-sublen2::before {
                right: 90px;
            }
        }
    }
    &__condition {
        display: inline-block;
        position: relative;
        width: 30px;
        height: 30px;
        line-height: 30px;
        vertical-align: middle;
        text-align: center;
        color: #707070;
        font-size: 12px;
        @include condition(#c0c0c0, #dddddd);
        &.-condition-any {
            @include condition(#909090, #606060);
        }
        &.-condition-R {
            @include condition(#ff6868, #c53838);
        }
        &.-condition-G {
            @include condition(#63c963, #339933);
        }
        &.-condition-B {
            @include condition(#6363ff, #3333cc);
        }

        &.-program-highlight {
            z-index: 1;
        }
        &.-program-highlight::before {
            content: " ";
            position: absolute;
            top: 0px;
            left: 0px;
            width: 100%;
            height: 100%;
            margin: -1px;
            border: 1px yellow solid;
        }
    }
    &__command {
        position: absolute;
        width: 100%;
        height: 100%;
    }
}

@mixin program-icon {
    background: svg(
        '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 30 30">\
            <defs>\
                <linearGradient id="shinebrush" x1="0" y1="0" x2="0" y2="1">\
                    <stop offset="0" stop-color="#ffffff" stop-opacity="0.35"/>\
                    <stop offset="0.467" stop-color="#ffffff" stop-opacity="0.15"/>\
                    <stop offset="0.475" stop-color="#ffffff" stop-opacity="0"/>\
                    <stop offset="1" stop-color="#ffffff" stop-opacity="0"/>\
                </linearGradient>\
            </defs>\
            <rect width="100%" height="100%" fill="#595959" stroke="none"/>\
            <rect width="100%" height="100%" fill="url(#shinebrush)" stroke="none"/>\
        </svg>');
}
@mixin program-icon-hover {
    background: svg(
        '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 30 30">\
            <defs>\
                <linearGradient id="shinebrush" x1="0" y1="0" x2="0" y2="1">\
                    <stop offset="0" stop-color="#ffffff" stop-opacity="0.35"/>\
                    <stop offset="0.467" stop-color="#ffffff" stop-opacity="0.15"/>\
                    <stop offset="0.475" stop-color="#ffffff" stop-opacity="0"/>\
                    <stop offset="1" stop-color="#ffffff" stop-opacity="0"/>\
                </linearGradient>\
                <linearGradient id="hovershinebrush" x1="0" y1="0" x2="0" y2="1">\
                    <stop offset="0" stop-color="#ffffff" stop-opacity="0.3"/>\
                    <stop offset="0.467" stop-color="#ffffff" stop-opacity="0.15"/>\
                    <stop offset="0.475" stop-color="#ffffff" stop-opacity="0"/>\
                    <stop offset="0.856" stop-color="#ffffff" stop-opacity="0"/>\
                    <stop offset="1" stop-color="#ffffff" stop-opacity="0.15"/>\
                </linearGradient>\
            </defs>\
            <rect width="100%" height="100%" fill="#393939" stroke="none"/>\
            <rect width="100%" height="100%" fill="url(#hovershinebrush)" stroke="none"/>\
            <rect width="100%" height="100%" fill="url(#shinebrush)" stroke="none"/>\
        </svg>');
}
@mixin program-icon-hover-active {
    background: svg(
        '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 30 30">\
            <defs>\
                <linearGradient id="shinebrush" x1="0" y1="0" x2="0" y2="1">\
                    <stop offset="0" stop-color="#ffffff" stop-opacity="0.35"/>\
                    <stop offset="0.467" stop-color="#ffffff" stop-opacity="0.15"/>\
                    <stop offset="0.475" stop-color="#ffffff" stop-opacity="0"/>\
                    <stop offset="1" stop-color="#ffffff" stop-opacity="0"/>\
                </linearGradient>\
                <linearGradient id="pressedbrush" x1="0" y1="0" x2="0" y2="1">\
                    <stop offset="0" stop-color="#000000" stop-opacity="0.30"/>\
                    <stop offset="0.467" stop-color="#000000" stop-opacity="0.30"/>\
                    <stop offset="0.475" stop-color="#ffffff" stop-opacity="0.15"/>\
                    <stop offset="1" stop-color="#ffffff" stop-opacity="0.15"/>\
                </linearGradient>\
            </defs>\
            <rect width="100%" height="100%" fill="#595959" stroke="none"/>\
            <rect width="100%" height="100%" fill="url(#pressedbrush)" stroke="none"/>\
            <rect width="100%" height="100%" fill="url(#shinebrush)" stroke="none"/>\
        </svg>');
}

.program-toolbar {
    background-color: #707070;
    padding: 5px;
    border-radius: 4px;
    &__icon-group {
        position: relative;
        padding: 5px;

        &.-tutorial-highlight::before {
            margin: -1px;
        }
    }
    &__icon {
        position: relative;
        display: block;
        outline: none;
        width: 32px;
        height: 32px;
        border-color: black;
        border-style: solid;
        border-width: 1px;
        margin: -1px;
        padding: 0;
        &::-moz-focus-inner {
            border: 0;
            padding: 0;
        }

        @include program-icon;
        &:hover {
            @include program-icon-hover; }
        &:hover:active {
            @include program-icon-hover-active; }

        overflow: visible;
        &.-tutorial-highlight::before {
            margin: -6px;
        }
    }
    &__command {
        width: 100%;
        height: 100%;
        &.-condition-any {
            @include command-condition(#909090, #606060);
        }
        &.-condition-R {
            @include command-condition(#ff6868, #c53838);
        }
        &.-condition-G {
            @include command-condition(#63c963, #339933);
        }
        &.-condition-B {
            @include command-condition(#6363ff, #3333cc);
        }
    }
}

.program {
    padding: 5px;
    width: 200px;
    border-radius: 4px;
    background-color: #707070;
    color: white;
}
.program-control {
    white-space: nowrap;
    &__go {
        box-sizing: border-box;
        width: 65%;
    }
    &__step {
        box-sizing: border-box;
        width: 35%;
    }
    &__edit {
        box-sizing: border-box;
        width: 100%;
    }
    &__speed-container {
        display: table;
        margin: 0 auto;
        > div {
            display: table-cell;
            vertical-align: middle;
        }
    }
    &__speed {
        //box-sizing: border-box;
        width: 100px; // box sizing isn't working on range input
    }
}

.design-panel {
    padding: 5px;
    width: 190px;
    border-radius: 4px;
    background-color: #707070;
    color: white;
    > p, > fieldset > p {
        margin: 0;
        padding: 0;
    }
    &__input {
        box-sizing: border-box;
        width: 100%;
    }
    &__sub-label {
        display: inline-block;
        box-sizing: border-box;
        width: 50%;
    }
    &__sub {
        box-sizing: border-box;
        width: 50%;
    }
    &__solve {
        box-sizing: border-box;
        width: 100%;
    }
}

#program-selection {
    display: none;
    visibility: hidden;
    position: absolute;
}
.program-selection-highlight {
    border: 1px yellow solid;
}

#design-selection {
    display: none;
    visibility: hidden;
    position: absolute;
}
.design-selection-highlight {
    border: 2px yellow solid;
}

#menu-signout, #menu-user {
    display: none;
}

#dialog-modal {
    display: none;
    z-index: 100;
    position: fixed;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
    background-color: rgba(80,80,80,0.8);
}
#dialogs {
    display: none;
    z-index: 101;
    position: absolute;
    top: 0px;
    left: 0px;
    width: 100%;
}
.dialog {
    display: none;
    background-color: #707070;
    border: solid 1px black;
    text-align: center;
}
.dialog-title {
    padding: 5px 20px;
    background-color: #202020;
    color: white;
    font-weight: bold;
}
.dialog-error {
    display: none;
    padding: 5px 20px;
    background-color: darkred;
    color: #f88;
}
.dialog-message {
    text-align: left;
}
.dialog-link {
    margin: 10px;
}
.dialog-link a:link {
    color: #d0d0b0;
}
.dialog-link a:visited {
    color: #d0d0b0;
}
.dialog-button {
    margin-top: 10px;
}
.dialog form {
    padding: 10px 20px;
}
.dialog table {
    width: 100%;
}
.dialog td {
    text-align: left;
}
.dialog td input {
    box-sizing: border-box;
    width: 100%;
}

#dialog-message {
    width: 450px;
    margin: 250px auto 0;
}
#dialog-register {
    width: 270px;
    margin: 250px auto 0;
}
#dialog-signin {
    width: 270px;
    margin: 250px auto 0;
}
#dialog-solved {
    width: 400px;
    margin: 250px auto 0;
}
#dialog-design-solved {
    width: 500px;
    margin: 250px auto 0;
}
#dialog-tutorial-solved {
    width: 400px;
    margin: 250px auto 0;
}

.votes {
    font-weight: bold;
    span.liked {
        color: darkgreen;
    }
    span.disliked {
        color: darkred;
    }
    input {
        position: absolute;
        left: -999px;
        clip: rect(0px, 0px, 0px, 0px);
    }
    input + label {
        display: inline-block;
        width: 70px;
        margin: 5px;
        padding: 3px;
        border: 1px solid rgba(0,0,0,0.2);
        color: white;
        -moz-user-select: none;
    }
    input[name="like"]:checked + label {
        background-color: #306030;
    }
    input[name="dislike"]:checked + label {
        background-color: #903030;
    }
}

// Others' difficulty vote average: display based on class
@for $i from 0 through 10 {
    .-difficulty-val-#{$i} {
        background: svg(
            '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16">\
                <defs>\
                    <linearGradient id="difficultyFillOther" x1="0" x2="0" y1="0" y2="1">\
                        <stop offset="0" stop-color="#4040c0"/>\
                        <stop offset="1" stop-color="#303090"/>\
                    </linearGradient>\
                </defs>\
                <rect x="2.5" y="2.5" width="11" height="11" fill="white" stroke="black"/>\
                <rect x="3" y="3" width="' + $i + '" height="10" fill="url(#difficultyFillOther)" stroke="none"/>\
            </svg>');
    }
}

.difficulty-input {
    position: relative;
    display: inline-block;
    input {
        position: absolute;
        left: -999px;
        clip: rect(0px, 0px, 0px, 0px);
    }
    label {
        float: left;
        margin: 0px;
        width: 16px;
        height: 16px;
    }
    span {
        display: none;
    }

    // User's vote: default to all colored
    &__val.-difficulty-val-user {
        background: svg(
            '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16">\
                <defs>\
                    <linearGradient id="difficultyFill" x1="0" x2="0" y1="0" y2="1">\
                        <stop offset="0" stop-color="#c04040"/>\
                        <stop offset="1" stop-color="#903030"/>\
                    </linearGradient>\
                </defs>\
                <rect x="2.5" y="2.5" width="11" height="11" fill="url(#difficultyFill)" stroke="black"/>\
            </svg>');
    }

    // Hover vote: default to all colored
    // This needs higher specificity than "User's vote: white squares"
    &:hover:hover:hover:hover &__val {
        background: svg(
            '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16">\
                <defs>\
                    <linearGradient id="difficultyFillHover" x1="0" x2="0" y1="0" y2="1">\
                        <stop offset="0" stop-color="#f08080"/>\
                        <stop offset="1" stop-color="#c04040"/>\
                    </linearGradient>\
                </defs>\
                <rect x="2.5" y="2.5" width="11" height="11" fill="url(#difficultyFillHover)" stroke="black"/>\
            </svg>');
    }

    // User's vote: white squares
    & input:checked + &__val ~ &__val.-difficulty-val-user,
    // Hover vote: white squares
    &:hover:hover:hover:hover &__val:hover ~ &__val {
        background: svg(
            '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16">\
                <rect x="2.5" y="2.5" width="11" height="11" fill="white" stroke="black"/>\
            </svg>');
    }
}
